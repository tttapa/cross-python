name: Docker

on:
  release:
    types: ['released', 'prereleased']
  workflow_dispatch:

env:
  # Used for building image
  TEMPORARY_TAG: ${{ github.repository }}:tmp
  # Python version to use for non-Python related builds
  FULL_NORMAL_PYTHON_VERSION: '3.11.0'

jobs:
  build-native-python:

    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        full-python-version:
          - '3.7.15'
          - '3.8.14'
          - '3.9.15'
          - '3.10.8'
          - '3.11.0'
    name: Native Python (${{ matrix.full-python-version }})

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: cache-native-python
        uses: actions/cache@v3
        with:
          path: python-${{ matrix.full-python-version }}.tar.xz
          key: native-python-${{ matrix.full-python-version }}-${{ hashFiles('native/Dockerfile') }}

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        if: steps.cache-native-python.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Build and load Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and load Docker image
        id: build
        if: steps.cache-native-python.outputs.cache-hit != 'true'
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: native
          build-args: |
            PYTHON_VERSION=${{ matrix.full-python-version }}
            PYTHON_SUFFIX=
          load: true
          tags: ${{ env.TEMPORARY_TAG }}
          cache-from: type=gha,scope=build-native-python-${{ matrix.full-python-version }}
          cache-to: type=gha,mode=max,scope=build-native-python-${{ matrix.full-python-version }}

      # Archive the Python build in the Docker container and copy it to the build environment
      - name: Export Python build
        if: steps.cache-native-python.outputs.cache-hit != 'true'
        run: |
          container=$(docker run -d ${{ env.TEMPORARY_TAG }} \
              bash -c "tar cJf python.tar.xz -C opt build-python-${{ matrix.full-python-version }}")
          status=$(docker wait $container)
          if [ $status -ne 0 ]; then
              echo "Error creating Python archive"
              exit 1
          fi
          echo "Copying Python build from Docker container to host"
          docker cp $container:/home/develop/python.tar.xz build-python-${{ matrix.full-python-version }}.tar.xz
          docker rm $container
          
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: build-python-${{ matrix.full-python-version }}
          path: build-python-${{ matrix.full-python-version }}.tar.xz

      - name: Release
        if: ${{ github.event.action == 'released' || github.event.action == 'prereleased' }}
        uses: softprops/action-gh-release@17cd0d34deddf848fc0e7d9be5202c148c270a0a
        with:
          files: build-python-${{ matrix.full-python-version }}.tar.xz

  build-cross-python:

    runs-on: ubuntu-22.04
    needs: [build-native-python]
    permissions:
      contents: write
    strategy:
      matrix:
        full-python-version:
          - '3.7.15'
          - '3.8.14'
          - '3.9.15'
          - '3.10.8'
          - '3.11.0'
        triple:
          - 'aarch64-rpi3-linux-gnu'
          - 'armv6-rpi-linux-gnueabihf'
          - 'armv7-neon-linux-gnueabihf'
          - 'armv8-rpi3-linux-gnueabihf'
          - 'x86_64-centos7-linux-gnu'
    name: Cross Python ${{ matrix.full-python-version }} ${{ matrix.triple }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: build-python-${{ matrix.full-python-version }}
      - run: tar xJf build-python-${{ matrix.full-python-version }}.tar.xz
      - run: echo "$PWD/build-python-${{ matrix.full-python-version }}/usr/local/bin" >> $GITHUB_PATH
      - run: |
          full_python_version=${{ matrix.full-python-version }}
          ln -s python${full_python_version%.*} build-python-${full_python_version}/usr/local/bin/python3
        shell: bash

      - run: |
          make toolchain HOST_TRIPLE=${{ matrix.triple }}
          python3 build.py --host ${{ matrix.triple }} --py ${{ matrix.full-python-version }} -j 1
          make clean-toolchain HOST_TRIPLE=${{ matrix.triple }}

      - run: tar cJf python-${{ matrix.full-python-version }}-${{ matrix.triple }}.tar.xz -C staging ${{ matrix.triple }}

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: python-${{ matrix.full-python-version }}-${{ matrix.triple }}
          path: python-${{ matrix.full-python-version }}-${{ matrix.triple }}.tar.xz

  build-cross-packages:

    runs-on: ubuntu-22.04
    needs: [build-cross-python]
    permissions:
      contents: write
    strategy:
      matrix:
        triple:
          - 'aarch64-rpi3-linux-gnu'
          - 'armv6-rpi-linux-gnueabihf'
          - 'armv7-neon-linux-gnueabihf'
          - 'armv8-rpi3-linux-gnueabihf'
          - 'x86_64-centos7-linux-gnu'
    name: Cross packages ${{ matrix.triple }}

    env:
      CCACHE_DIR: /tmp/${{ matrix.triple }}.ccache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: build-python-${{ env.FULL_NORMAL_PYTHON_VERSION }}
      - run: tar xJf build-python-${{ env.FULL_NORMAL_PYTHON_VERSION }}.tar.xz
      - run: echo "$PWD/build-python-${{ env.FULL_NORMAL_PYTHON_VERSION }}/usr/local/bin" >> $GITHUB_PATH
      - run: |
          full_python_version=${{ env.FULL_NORMAL_PYTHON_VERSION }}
          ln -s python${full_python_version%.*} build-python-${full_python_version}/usr/local/bin/python3
        shell: bash

      - run: sudo apt update && sudo apt install -y ccache ninja-build
      - uses: actions/cache@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.triple }}

      - run: make toolchain HOST_TRIPLE=${{ matrix.triple }}

      - uses: actions/download-artifact@v3
        with:
          name: python-3.7.15-${{ matrix.triple }}
      - run: tar xJf python-3.7.15-${{ matrix.triple }}.tar.xz -C staging
      - uses: actions/download-artifact@v3
        with:
          name: python-3.8.14-${{ matrix.triple }}
      - run: tar xJf python-3.8.14-${{ matrix.triple }}.tar.xz -C staging
      - uses: actions/download-artifact@v3
        with:
          name: python-3.9.15-${{ matrix.triple }}
      - run: tar xJf python-3.9.15-${{ matrix.triple }}.tar.xz -C staging
      - uses: actions/download-artifact@v3
        with:
          name: python-3.10.8-${{ matrix.triple }}
      - run: tar xJf python-3.10.8-${{ matrix.triple }}.tar.xz -C staging
      - uses: actions/download-artifact@v3
        with:
          name: python-3.11.0-${{ matrix.triple }}
      - run: tar xJf python-3.11.0-${{ matrix.triple }}.tar.xz -C staging

      - run: python3 build.py --host ${{ matrix.triple }} -p -j 1

      - run: tar cJf full-${{ matrix.triple }}.tar.xz -C staging ${{ matrix.triple }}
      - run: make clean-toolchain HOST_TRIPLE=${{ matrix.triple }}
      - run: tar cJf without-toolchain-${{ matrix.triple }}.tar.xz -C staging ${{ matrix.triple }}

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: without-toolchain-${{ matrix.triple }}
          path: without-toolchain-${{ matrix.triple }}.tar.xz

      - name: Release
        if: ${{ github.event.action == 'released' || github.event.action == 'prereleased' }}
        uses: softprops/action-gh-release@17cd0d34deddf848fc0e7d9be5202c148c270a0a
        with:
          files: without-toolchain-${{ matrix.triple }}.tar.xz

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: full-${{ matrix.triple }}
          path: full-${{ matrix.triple }}.tar.xz

      - name: Release
        if: ${{ github.event.action == 'released' || github.event.action == 'prereleased' }}
        uses: softprops/action-gh-release@17cd0d34deddf848fc0e7d9be5202c148c270a0a
        with:
          files: full-${{ matrix.triple }}.tar.xz
